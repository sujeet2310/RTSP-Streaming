<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAAAzhJREFUeF7t
        nNFx00AURbcDTAeUQAn8SsOHHRpIGfzBf5SJO4AOoIPQQSjEQe7A6I2vmMH77NnVStp90j0z9yd43+rq
        jCOiOHKEEEIIIWRONrtmv9k9/Mqdt7vmMw4pGZml7TF/mj0OKRxZ+GbXnHKnO/jvOKRkZJa2x9yRc4tD
        CodCpguFAAoZIRQCKGS6UAigkBFCIYBCpguFAAoZIRQCKGS6zCKkK3uUNWPHxr2s5qidk2uRNTikcGSR
        NuxaBm2yEGY5VxQSDoUUBoUUBoUUBoUUBoUUBoUUBoUUBoUUBoUUBoUUBoUUBoUUBoUUBoUUBoUUBoUU
        xjxC7h7vN3cPX8PzeI+lq4PnihBCCCGEEEIIIYQQQgixySb68UwDHjlEwpGTrP2261rk9VhKpoBCCmPp
        Ql5d9XRw1fOU+eOqH63bbrBlGksW8urqb52Q0zypX0aRslQh88roM4KUJQrJI6NPopSlCckro0+ClCUJ
        KUNGn4FSrAnpin7RIv/T0U9MztQvl8fZB3V87AnRitsL6vhQSJ6gjg+F5Anq+FBInqCOD4XkCer4UEie
        oI4PheQJ6vhQSJ6gjg+F5Anq+MQKmSryaFcc0k20cok5dj8571v38QO2+Id8Tf7t/Bp17eBgC581Czm4
        +mfrtu8w+iryGnmtNmNoMNpnvULq6A9r4N2izIoPRvqsVMjgp2jL2otZg4JxPisUckz5BZKslRkXM6OD
        cT5rE9JdC5L/dlxmaLNjglE+axOS8u7owbtEnR8ajPJZl5D6N8YkI7P0PcKCMT5rEnJw1Wg/1MosbY/Q
        YIwPhQyDQoBWLjQUEpGZriEtxiQjs/Q9woIxPvGPHJoon5otDukmWrmYtK5+j1GDkRna7JhglH20cjGR
        jwth1GC6b1fP2uyYYJR9tHKx0e7shnK+A6zPjQnG2UcrF5+6lTu4GBnM+VtV2rWjD0baRys3LCIl/Hoy
        pgwJxtpHK5eYp1u3U863Scb/zDDG20crN0bOF+r/P387xsX7WlDHPlo5i0Ed+2jlLAZ17KOVsxjUsY9W
        zmJQxz5aOYtBHfto5SwGdeyjlbMY1LGPVs5iUMc+Wjl7qU5/AVFZEA9+FWhuAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="Guna2HtmlLabel4.Text" xml:space="preserve">
    <value>&lt;font color=#0F518C&gt;&lt;b&gt;Product Details&lt;b&gt;&lt;/font&gt; : &lt;font color=#ED0049&gt;&amp;nbsp;This application uses RTSP protocol &lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;to Stream live camera and provide &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
screen capture feature.&lt;/font&gt;</value>
  </data>
</root>